v2.0 raw
# This is an automatically-generated PIPS machine code file

# 0x0000: nop # first instr not execute
00000000 

# 0x0004: li $s0, TERMINAL
0a01ff10 

# 0x0008: li $sp, 0xf800
0e01f800 

# 0x000c: li $s3, 0x0a
0d01000a 

# 0x0010: li $a0, 15
0201000f 

# 0x0014: li $s1, 0
0b010000 

# 0x0018: beq $s1, $a0, exit_program
db210060 

# 0x001c: nop
00000000 

# 0x0020: addi $s1, $s1, 1
0bb10001 

# 0x0024: addi $sp, $sp, -8
0ee1fff8 

# 0x0028: sw $a0, 0($sp)
c2e10000 

# 0x002c: sw $s1, 4($sp)
cbe10004 

# 0x0030: addi $a0, $s1, 0
02b10000 

# 0x0034: jal fibonacci_calc
ff030068 

# 0x0038: nop
00000000 

# 0x003c: addi $a0, $v0, 0
02110000 

# 0x0040: jal print_number
ff0300e8 

# 0x0044: nop
00000000 

# 0x0048: sb $s3, 0($s0)
bda10000 

# 0x004c: lw $a0, 0($sp)
a2e10000 

# 0x0050: lw $s1, 4($sp)
abe10004 

# 0x0054: addi $sp, $sp, 8
0ee10008 

# 0x0058: j print_loop
f0010018 

# 0x005c: nop
00000000 

# 0x0060: j HALT
f001ff00 

# 0x0064: nop
00000000 

# 0x0068: li $t1, 1
07010001 

# 0x006c: li $t2, 2
08010002 

# 0x0070: bne $a0, $t1, notequalone
e2710084 

# 0x0074: nop
00000000 

# 0x0078: addi $v0, $t1, 0
01710000 

# 0x007c: jr $ra
f000f000 

# 0x0080: nop
00000000 

# 0x0084: bne $a0, $t2, notequaltwo
e2810098 

# 0x0088: nop
00000000 

# 0x008c: addi $v0, $t1, 0
01710000 

# 0x0090: jr $ra
f000f000 

# 0x0094: nop
00000000 

# 0x0098: addi $sp, $sp, -12
0ee1fff4 

# 0x009c: sw $ra, 0($sp)
cfe10000 

# 0x00a0: sw $a0, 4($sp)
c2e10004 

# 0x00a4: addi $a0, $a0, -2
0221fffe 

# 0x00a8: jal fibonacci_calc
ff030068 

# 0x00ac: nop
00000000 

# 0x00b0: addi $s1, $v0, 0
0b110000 

# 0x00b4: sw $s1, 8($sp)
cbe10008 

# 0x00b8: lw $a0, 4($sp)
a2e10004 

# 0x00bc: addi $a0, $a0, -1
0221ffff 

# 0x00c0: jal fibonacci_calc
ff030068 

# 0x00c4: nop
00000000 

# 0x00c8: addi $s2, $v0, 0
0c110000 

# 0x00cc: lw $s1, 8($sp)
abe10008 

# 0x00d0: add $v0, $s1, $s2
01b0c000 

# 0x00d4: lw $a0, 4($sp)
a2e10004 

# 0x00d8: lw $ra, 0($sp)
afe10000 

# 0x00dc: addi $sp, $sp, 12
0ee1000c 

# 0x00e0: jr $ra
f000f000 

# 0x00e4: nop
00000000 

# 0x00e8: bne $a0, $zero, else
e2010100 

# 0x00ec: nop
00000000 

# 0x00f0: li $t0, 0x30
06010030 

# 0x00f4: sb $t0, 0($s0)
b6a10000 

# 0x00f8: j print_return #jump to return from print_num func
f0010160 

# 0x00fc: nop
00000000 

# 0x0100: addi $sp, $sp, -12
0ee1fff4 

# 0x0104: sw $ra, 0($sp)
cfe10000 

# 0x0108: sw $a0, 4($sp)
c2e10004 

# 0x010c: li $a1, 10
0301000a 

# 0x0110: jal remainder
ff030168 

# 0x0114: nop
00000000 

# 0x0118: addi $s1, $v0, 0
0b110000 

# 0x011c: sw $s1, 8($sp)
cbe10008 

# 0x0120: lw $a0, 4($sp)
a2e10004 

# 0x0124: slt $t2, $s1, $a0 # t1 is digit, a0 is n
78b02000 

# 0x0128: beq $t2, $zero, post_recursion
d8010148 

# 0x012c: nop
00000000 

# 0x0130: li $a1, 10 # can be deleted later
0301000a 

# 0x0134: jal quotient
ff030190 

# 0x0138: nop
00000000 

# 0x013c: addi $a0, $v0, 0
02110000 

# 0x0140: jal print_number
ff0300e8 

# 0x0144: nop
00000000 

# 0x0148: lw $s1, 8($sp)
abe10008 

# 0x014c: addi $t0, $s1, 0x30
06b10030 

# 0x0150: sb $t0, 0($s0)
b6a10000 

# 0x0154: lw $ra, 0($sp)
afe10000 

# 0x0158: lw $a0, 4($sp)
a2e10004 

# 0x015c: addi $sp, $sp, 12
0ee1000c 

# 0x0160: jr $ra
f000f000 

# 0x0164: nop
00000000 

# 0x0168: slt $t0, $a0, $a1
76203000 

# 0x016c: bne $t0, $zero, remainder_return
e6010184 

# 0x0170: nop
00000000 

# 0x0174: sub $a0, $a0, $a1
12203000 

# 0x0178: slt $t1, $a0, $a1
77203000 

# 0x017c: beq $t1, $zero, remainder_while
d7010174 

# 0x0180: nop
00000000 

# 0x0184: addi $v0, $a0, 0
01210000 

# 0x0188: jr $ra
f000f000 

# 0x018c: nop
00000000 

# 0x0190: li $t2, 0
08010000 

# 0x0194: slt $t0, $a0, $a1
76203000 

# 0x0198: bne $t0, $zero, quotient_return
e60101b4 

# 0x019c: nop
00000000 

# 0x01a0: sub $a0, $a0, $a1
12203000 

# 0x01a4: addi $t2, $t2, 1
08810001 

# 0x01a8: slt $t1, $a0, $a1
77203000 

# 0x01ac: beq $t1, $zero, quotient_while
d70101a0 

# 0x01b0: nop
00000000 

# 0x01b4: addi $v0, $t2, 0
01810000 

# 0x01b8: jr $ra
f000f000 

# 0x01bc: nop
00000000 
